{"ast":null,"code":"var _jsxFileName = \"/Users/savedcity/dev-applicants/project/src/components/credit-c-features/CCFeatures.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { GridColumn, GridRow } from \"emotion-flex-grid\";\nimport \"./CCFeaturesMobile.css\";\nimport \"./CCFeaturesDesktop.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CCFeatures() {\n  _s();\n\n  const [CCData, setCCData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    fetchCCData();\n  }, []);\n\n  const fetchCCData = async () => {\n    const data = await axios.get(\"https://mocki.io/v1/b9c63035-97c5-40a0-b45c-2abdf5261bdf\").then(res => res.data).catch(err => {\n      console.log(err);\n      setError(true);\n    });\n    setCCData(data);\n    setLoading(false);\n  };\n\n  const pageReload = () => {\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(GridRow, {\n    wrap: \"wrap\",\n    direction: \"column\" // justify=\"center\"\n    ,\n    align: \"center\",\n    className: \"cc-features-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Experience The Cardo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"data-error\",\n          children: \"There was an error aquiring the data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: pageReload,\n          children: \"Reload page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this) : loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this) : CCData.slice(0, 6).map((feature, index) => {\n        const {\n          title,\n          description,\n          button\n        } = feature;\n        return /*#__PURE__*/_jsxDEV(GridColumn, {\n          m: [\"l\"],\n          className: \"cc-feature-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"cc-feature-title\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"cc-feature-description\",\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"cc-feature-btn\",\n            href: button.link,\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: button.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CCFeatures, \"gBimTDS48S1Fcs07WZfCJUqPY2w=\");\n\n_c = CCFeatures;\n\nvar _c;\n\n$RefreshReg$(_c, \"CCFeatures\");","map":{"version":3,"sources":["/Users/savedcity/dev-applicants/project/src/components/credit-c-features/CCFeatures.js"],"names":["React","useState","useEffect","axios","GridColumn","GridRow","CCFeatures","CCData","setCCData","loading","setLoading","error","setError","fetchCCData","data","get","then","res","catch","err","console","log","pageReload","window","location","reload","slice","map","feature","index","title","description","button","link","text"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { GridColumn, GridRow } from \"emotion-flex-grid\";\n\nimport \"./CCFeaturesMobile.css\";\nimport \"./CCFeaturesDesktop.css\";\n\nexport default function CCFeatures() {\n  const [CCData, setCCData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    fetchCCData();\n  }, []);\n\n  const fetchCCData = async () => {\n    const data = await axios\n      .get(\"https://mocki.io/v1/b9c63035-97c5-40a0-b45c-2abdf5261bdf\")\n      .then((res) => res.data)\n      .catch((err) => {\n        console.log(err);\n        setError(true);\n      });\n\n    setCCData(data);\n    setLoading(false);\n  };\n\n  const pageReload = () => {\n    window.location.reload();\n  };\n\n  return (\n    <GridRow\n      wrap=\"wrap\"\n      direction=\"column\"\n      // justify=\"center\"\n      align=\"center\"\n      className=\"cc-features-container\"\n    >\n      <h1>Experience The Cardo</h1>\n\n      <div>\n        {error ? (\n          <div>\n            <p className=\"data-error\">There was an error aquiring the data</p>\n            <button onClick={pageReload}>Reload page</button>\n          </div>\n        ) : loading ? (\n          <div className=\"loading-container\">\n            {/* loaders */}\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n          </div>\n        ) : (\n          CCData.slice(0, 6).map((feature, index) => {\n            const { title, description, button } = feature;\n            return (\n              <GridColumn m={[\"l\"]} key={index} className=\"cc-feature-card\">\n                <h3 className=\"cc-feature-title\">{title}</h3>\n                <p className=\"cc-feature-description\">{description}</p>\n                <a\n                  className=\"cc-feature-btn\"\n                  href={button.link}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  {button.text}\n                </a>\n              </GridColumn>\n            );\n          })\n        )}\n      </div>\n    </GridRow>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}