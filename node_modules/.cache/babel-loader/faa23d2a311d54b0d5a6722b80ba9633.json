{"ast":null,"code":"var _jsxFileName = \"/Users/savedcity/dev-applicants/project/src/components/credit-c-features/CCFeatures.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { GridColumn, GridRow } from \"emotion-flex-grid\";\nimport \"./CCFeaturesMobile.css\";\nimport \"./CCFeaturesDesktop.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CCFeatures() {\n  _s();\n\n  const [CCData, setCCData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    fetchCCData();\n  }, []);\n\n  const fetchCCData = async () => {\n    const data = await axios.get(\"https://mocki.io/v1/b9c63035-97c5-40a0-b45c-2abdf5261bdf\").then(res => res.data).catch(err => {\n      console.log(err);\n      setError(true);\n    });\n    setCCData(data);\n    setLoading(false);\n  };\n\n  const pageReload = () => {\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(GridRow, {\n    align: \"center\",\n    children: /*#__PURE__*/_jsxDEV(GridRow, {\n      wrap: \"wrap\",\n      direction: \"column\",\n      justify: \"center\" // align=\"center\"\n      ,\n      className: \"cc-features-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Experience The Cardo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: error ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"data-error\",\n            children: \"There was an error aquiring the data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: pageReload,\n            children: \"Reload page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this) : loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this) : CCData.slice(0, 6).map((feature, index) => {\n          const {\n            title,\n            description,\n            button\n          } = feature;\n          return /*#__PURE__*/_jsxDEV(GridColumn, {\n            m: [\"l\"],\n            className: \"cc-feature-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"cc-feature-title\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"cc-feature-description\",\n              children: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"cc-feature-btn\",\n              href: button.link,\n              target: \"_blank\",\n              rel: \"noreferrer\",\n              children: button.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CCFeatures, \"gBimTDS48S1Fcs07WZfCJUqPY2w=\");\n\n_c = CCFeatures;\n\nvar _c;\n\n$RefreshReg$(_c, \"CCFeatures\");","map":{"version":3,"sources":["/Users/savedcity/dev-applicants/project/src/components/credit-c-features/CCFeatures.js"],"names":["React","useState","useEffect","axios","GridColumn","GridRow","CCFeatures","CCData","setCCData","loading","setLoading","error","setError","fetchCCData","data","get","then","res","catch","err","console","log","pageReload","window","location","reload","slice","map","feature","index","title","description","button","link","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,mBAApC;AAEA,OAAO,wBAAP;AACA,OAAO,yBAAP;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,KAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,WAAW,GAAG,YAAY;AAC9B,UAAMC,IAAI,GAAG,MAAMX,KAAK,CACrBY,GADgB,CACZ,0DADY,EAEhBC,IAFgB,CAEVC,GAAD,IAASA,GAAG,CAACH,IAFF,EAGhBI,KAHgB,CAGTC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAP,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KANgB,CAAnB;AAQAJ,IAAAA,SAAS,CAACM,IAAD,CAAT;AACAJ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAXD;;AAaA,QAAMY,UAAU,GAAG,MAAM;AACvBC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,GAFD;;AAIA,sBACE,QAAC,OAAD;AAAS,IAAA,KAAK,EAAC,QAAf;AAAA,2BACE,QAAC,OAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC,QAFZ;AAGE,MAAA,OAAO,EAAC,QAHV,CAIE;AAJF;AAKE,MAAA,SAAS,EAAC,uBALZ;AAAA,8BAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAA,kBACGd,KAAK,gBACJ;AAAA,kCACE;AAAG,YAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,OAAO,EAAEW,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADI,GAKFb,OAAO,gBACT;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,kCAEE;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADS,GAUTF,MAAM,CAACmB,KAAP,CAAa,CAAb,EAAgB,CAAhB,EAAmBC,GAAnB,CAAuB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACzC,gBAAM;AAAEC,YAAAA,KAAF;AAASC,YAAAA,WAAT;AAAsBC,YAAAA;AAAtB,cAAiCJ,OAAvC;AACA,8BACE,QAAC,UAAD;AAAY,YAAA,CAAC,EAAE,CAAC,GAAD,CAAf;AAAkC,YAAA,SAAS,EAAC,iBAA5C;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,kBAAd;AAAA,wBAAkCE;AAAlC;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAG,cAAA,SAAS,EAAC,wBAAb;AAAA,wBAAuCC;AAAvC;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AACE,cAAA,SAAS,EAAC,gBADZ;AAEE,cAAA,IAAI,EAAEC,MAAM,CAACC,IAFf;AAGE,cAAA,MAAM,EAAC,QAHT;AAIE,cAAA,GAAG,EAAC,YAJN;AAAA,wBAMGD,MAAM,CAACE;AANV;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA,aAA2BL,KAA3B;AAAA;AAAA;AAAA;AAAA,kBADF;AAcD,SAhBD;AAhBJ;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgDD;;GA1EuBvB,U;;KAAAA,U","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { GridColumn, GridRow } from \"emotion-flex-grid\";\n\nimport \"./CCFeaturesMobile.css\";\nimport \"./CCFeaturesDesktop.css\";\n\nexport default function CCFeatures() {\n  const [CCData, setCCData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    fetchCCData();\n  }, []);\n\n  const fetchCCData = async () => {\n    const data = await axios\n      .get(\"https://mocki.io/v1/b9c63035-97c5-40a0-b45c-2abdf5261bdf\")\n      .then((res) => res.data)\n      .catch((err) => {\n        console.log(err);\n        setError(true);\n      });\n\n    setCCData(data);\n    setLoading(false);\n  };\n\n  const pageReload = () => {\n    window.location.reload();\n  };\n\n  return (\n    <GridRow align=\"center\">\n      <GridRow\n        wrap=\"wrap\"\n        direction=\"column\"\n        justify=\"center\"\n        // align=\"center\"\n        className=\"cc-features-container\"\n      >\n        <h1>Experience The Cardo</h1>\n        <div>\n          {error ? (\n            <div>\n              <p className=\"data-error\">There was an error aquiring the data</p>\n              <button onClick={pageReload}>Reload page</button>\n            </div>\n          ) : loading ? (\n            <div className=\"loading-container\">\n              {/* loaders */}\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n            </div>\n          ) : (\n            CCData.slice(0, 6).map((feature, index) => {\n              const { title, description, button } = feature;\n              return (\n                <GridColumn m={[\"l\"]} key={index} className=\"cc-feature-card\">\n                  <h3 className=\"cc-feature-title\">{title}</h3>\n                  <p className=\"cc-feature-description\">{description}</p>\n                  <a\n                    className=\"cc-feature-btn\"\n                    href={button.link}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    {button.text}\n                  </a>\n                </GridColumn>\n              );\n            })\n          )}\n        </div>\n      </GridRow>\n    </GridRow>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}